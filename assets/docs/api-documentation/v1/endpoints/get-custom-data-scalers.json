{
  "lastReviewedOn": "05 Dec 2024",
    "content":"<h1>Get Custom Data Scalers</h1>   <p><mark><b>GET</b> &rarr; /v1/custom/data_scaler/all</mark></p>   <p>Retrieve a list with all the custom data scalers registered to your application ID.</p>   <p><strong>API credit cost:</strong><br><i>(please refer to the <a href=\"#/docs/api-documentation/v1/overview\">Overview</a> page).</i></p><strong>Signing string template:</strong><br>  <pre class=\"centre\"><code>string_to_sign = f\"{current_unix_timestamp_seconds}{application_id}\"</code></pre> <h2>Headers</h2><p>The following headers need to be included in your request:</p>     <ul><li><strong>X-Signature:</strong> The <a href=\"#/docs/api-documentation/v1/generating-signature\">signature generated</a> using the signing string template provided above.</li>        <li><strong>X-Signature-Timestamp:</strong> The current Unix timestamp in seconds.</li>       <li><strong>Application-Id:</strong> Your unique application ID. <a href=\"#/docs/api-documentation/v1/getting-started\">(Where do I get this?)</a></li>  </ul><h2>Response</h2><p>The API will return a JSON response that includes a 'success' flag, 'msg', 'msgType', and 'records'. If the 'success' flag is false, the HTTP status code along with the message will provide suitable feedback. Ensure that the path parameters are valid.</p><h3>Example Response</h3>A typical successful response will look as follows: <pre class=\"centre\"><code>{\n \"success\": true,\n \"msg\": \"Custom data scalers retrieved successfully.\",\n \"msgType\": \"Success\",\n \"records\": [\n   {\n     \"scaler_trading_pair\": \"MY_BTC_USD\"\n   },\n   {\n     \"scaler_trading_pair\": \"MY_ETH_USD\"\n   }\n ]\n}</code></pre><i><p>Only the data scaler identifier (scaler_trading_pair) is returned in the response at the moment. Please note that this is subject to change without prior notice. As such, it is recommended to implement robust handling for the response to accommodate potential future additions to the response records.</p></i><h2>Example Code</h2><p>Below is a sample Python script for making a request to this endpoint. It uses version 1.5.0 of the <a href='https://pynacl.readthedocs.io/en/1.0.1/signing/'>PyNaCl library</a> and version 2.31.0 of the <a href='https://requests.readthedocs.io/en/latest/'>Requests library</a>.</p><pre><code class=\"python\">from datetime import datetime, timezone\nfrom nacl.encoding import HexEncoder\nfrom nacl.signing import SigningKey\nimport requests\n\n# Declare your signing key and application ID - replace these values with your own\nSIGNING_KEY = \"6163210a5115853f6fdfe7bf7bb1d26c8652f343fe3a3c072b2b706f0d1b9c56\"\nAPPLICATION_ID = \"e91523761f929ed7d1ea2f830fe2aec9\"\n\n# API base URL\nBASE_URL = \"https://api.raker.market\"\n\n# Constructing the request URL\nrequest_url: str = f\"{BASE_URL}/v1/custom/data_scaler/all\"\n\n# Current Unix timestamp\ncurrent_unix_timestamp_seconds: int = int(datetime.now(timezone.utc).timestamp())\n\n# Concatenating the string to be signed\nstring_to_sign: str = f\"{current_unix_timestamp_seconds}{APPLICATION_ID}\"\n\n# Sign the string using the signing key\nsigning_key = SigningKey(SIGNING_KEY, encoder=HexEncoder)\nsignature: str = signing_key.sign(\n    string_to_sign.encode(), encoder=HexEncoder\n).signature.decode()\n\n# Preparing request headers\nrequest_headers = {\n    \"X-Signature\": signature,\n    \"X-Signature-Timestamp\": str(current_unix_timestamp_seconds),\n    \"X-Application-Id\": APPLICATION_ID,\n    \"Content-Type\": \"application/json\",\n}\n\n\n# Making a GET request to the API endpoint\nresponse = requests.get(\n    url=request_url,\n    headers=request_headers,\n)\n\n# Parsing the response to JSON\nresponse_json = response.json()\n\nprint(response_json)\n\n# Extracting response data\nMSG_TYPES = [\"Success\", \"Error\", \"Warning\", \"Notice\"]\n\nresponse_success: bool = response_json[\"success\"]\nresponse_msg: str = response_json[\"msg\"]\nresponse_msgType: str = response_json[\"msgType\"]\nresponse_records: list[dict] = response_json[\"records\"]\n\n# Extract a list of trading pairs from the response\ntrading_pairs = []\nfor record in response_records:\n    trading_pairs.append(record[\"scaler_trading_pair\"])\n\n# Printing the response\nprint(f\"Response: {response_msgType} - {response_msg}\")\nprint(f\"Trading Pairs: {trading_pairs}\")\n</code></pre>",
  "i18n_content": "docs_nav_tree.api_documentation.v1.endpoints.get-custom-data-scalers.content"
}
